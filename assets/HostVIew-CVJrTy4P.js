import{$ as _}from"./bundler-CViGtuft.js";import{_ as p,r as d,o as g,c as i,a as s,b as f,d as h,t as v,e as l,f as x}from"./index-CCd0E21E.js";const y={style:{padding:"2rem","max-width":"600px",margin:"auto"}},M=["disabled"],b={key:0,style:{"margin-top":"1rem",color:"green"}},w={__name:"Host",setup(u){function c(){return Math.random().toString(36).substring(2,7)}const t=d(c()),a=d(!1);let o=null,n=null;g(()=>{o=new _(t.value),o.on("open",e=>{t.value=e,console.log("Host Peer ready with ID:",e)}),o.on("error",e=>{console.error("PeerJS error (host):",e),alert("Host error: "+e)}),o.on("call",e=>{if(!n)return alert("Please start your mic first!");e.answer(n),e.on("close",()=>{}),e.on("error",console.error)})});async function m(){try{n=await navigator.mediaDevices.getUserMedia({audio:!0}),a.value=!0}catch(e){alert("Could not access mic: "+e.message)}}return(e,r)=>(l(),i("div",y,[r[1]||(r[1]=s("h2",null,"Host Mode",-1)),s("p",null,[r[0]||(r[0]=h(" Room ID to share: ")),s("strong",null,v(t.value),1)]),s("button",{onClick:m,disabled:a.value}," ðŸ”Š Start My Mic ",8,M),a.value?(l(),i("p",b," Mic is live â€” listeners can join using that Room ID. ")):f("",!0)]))}},I=p(w,[["__scopeId","data-v-293b009a"]]),H={style:{padding:"2rem","max-width":"600px",margin:"auto"}},S={__name:"HostVIew",setup(u){return(c,t)=>(l(),i("div",H,[x(I)]))}};export{S as default};
